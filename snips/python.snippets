## C ##

snippet cls "Class" b
class $1:
	$0
endsnippet

snippet clsc "Class with constructor" b
class $1:
	def __init__(self$2):
		$0
endsnippet

## F ##

snippet f "Function" b
def $1($2):
	$0
endsnippet


snippet fore "For Each" b
for $1 in $2:
	$0
endsnippet

snippet fori
for i in range($1):
	$0
endsnippet

## I ##

snippet im "Import" b
import $0
endsnippet

snippet 'if ' "If" brA
if $1:
	$0
endsnippet

snippet 'ife ' "If Else" brA
if $1:
	$0
else:
	``
endsnippet

snippet 'ifl(n?) ' "If length" brA
if len(${1: }) `!p snip.rv = '!' if match[1] == 'n' else '='`= $2:
	$0
endsnippet

snippet 'if([lg])t(e?) ' "If length" brA
if len(${1: }) `!p snip.rv = '>' if match[1] == 'g' else '<'``!p snip.rv = '=' if match[2] == 'e' else ''` $2:
	$0
endsnippet

## O ##

snippet o "Open file" b
with open($1) as f:
	$0
endsnippet

snippet orl "Open file, read lines (strip whitespace)" b
with open($1) as f:
	for line in f:
		line = line.strip()
		$0
endsnippet

snippet Ow "Object Wrapper" b
class ObjectWrapper:
	def __init__(self, obj):
		self.obj = obj

	def __getattr__(self, name):
		r = self.obj[name]

		if isinstance(r, dict):
			return ObjectWrapper(r)
		else:
			return r
endsnippet

## R ##

snippet r "Return" b
return $0
endsnippet

snippet 'rr ' "Self reference" wA
self.
endsnippet

snippet rl "Read lines (strip whitespace)" b
for line in $1:
	line = line.strip()
	$0
endsnippet
