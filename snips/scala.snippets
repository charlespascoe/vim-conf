snippet cc "Case Class"
case class $1($0)
endsnippet

snippet co "Case Object"
case object $1 {
  $0
}
endsnippet

snippet o "Object"
object $1 {
  $0
}
endsnippet

snippet p "package"
package $0
endsnippet


snippet def "Method"
def $1($2): $3 = {
  $0
}
endsnippet


snippet odef "Override Method"
override def $1($2): $3 = {
  $0
}
endsnippet


snippet match "Match"
match {
  case $1 =>
    $0
}
endsnippet


snippet playcontroller "Play Controller Template"
package $1

import javax.inject._
import play.api._
import play.api.mvc._
import scala.concurrent.ExecutionContext

@Singleton
class $2 @Inject()(cc: ControllerComponents)(implicit ec: ExecutionContext) extends AbstractController(cc) {
  $0
}
endsnippet
